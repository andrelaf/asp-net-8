// <auto-generated />
using System;
using CqrsDemo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CqrsDemo.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231203004537_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CqrsDemo.Core.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ContactName");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Description");

                    b.Property<DateTimeOffset>("DueDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DueDate");

                    b.Property<DateTimeOffset>("InvoiceDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("InvoiceDate");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasColumnName("InvoiceNumber");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.ToTable("Invoices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Amount = 2000m,
                            ContactName = "John Doe",
                            Description = "Invoice 1",
                            DueDate = new DateTimeOffset(new DateTime(2023, 12, 23, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2424), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceDate = new DateTimeOffset(new DateTime(2023, 11, 23, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2403), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceNumber = "INV-0001",
                            Status = "Draft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Amount = 2000m,
                            ContactName = "Jane Doe",
                            Description = "Invoice 2",
                            DueDate = new DateTimeOffset(new DateTime(2023, 12, 18, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2431), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceDate = new DateTimeOffset(new DateTime(2023, 11, 28, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2430), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceNumber = "INV-0002",
                            Status = "Draft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Amount = 3500m,
                            ContactName = "John Doe",
                            Description = "Invoice 3",
                            DueDate = new DateTimeOffset(new DateTime(2023, 12, 13, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2438), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceDate = new DateTimeOffset(new DateTime(2023, 12, 1, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2437), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceNumber = "INV-0003",
                            Status = "Draft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Amount = 5500m,
                            ContactName = "Jane Doe",
                            Description = "Invoice 4",
                            DueDate = new DateTimeOffset(new DateTime(2023, 12, 8, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2441), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceDate = new DateTimeOffset(new DateTime(2023, 12, 2, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2441), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceNumber = "INV-0004",
                            Status = "Draft"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Amount = 8000m,
                            ContactName = "John Doe",
                            Description = "Invoice 5",
                            DueDate = new DateTimeOffset(new DateTime(2023, 12, 5, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2444), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceDate = new DateTimeOffset(new DateTime(2023, 12, 3, 0, 45, 35, 596, DateTimeKind.Unspecified).AddTicks(2444), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoiceNumber = "INV-0005",
                            Status = "Draft"
                        });
                });

            modelBuilder.Entity("CqrsDemo.Core.Models.InvoiceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Description");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InvoiceId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("Quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Amount = 1000m,
                            Description = "Item 1",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "",
                            Quantity = 1m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Amount = 1000m,
                            Description = "Item 2",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Name = "",
                            Quantity = 2m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            Amount = 1000m,
                            Description = "Item 1",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "",
                            Quantity = 1m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            Amount = 1000m,
                            Description = "Item 2",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Name = "",
                            Quantity = 2m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000031"),
                            Amount = 1000m,
                            Description = "Item 1",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "",
                            Quantity = 1m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000032"),
                            Amount = 1000m,
                            Description = "Item 2",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "",
                            Quantity = 2m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000033"),
                            Amount = 1500m,
                            Description = "Item 3",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Name = "",
                            Quantity = 3m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000041"),
                            Amount = 1000m,
                            Description = "Item 1",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "",
                            Quantity = 1m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000042"),
                            Amount = 1000m,
                            Description = "Item 2",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "",
                            Quantity = 2m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000043"),
                            Amount = 1500m,
                            Description = "Item 3",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "",
                            Quantity = 3m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000044"),
                            Amount = 2000m,
                            Description = "Item 4",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Name = "",
                            Quantity = 4m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000051"),
                            Amount = 1000m,
                            Description = "Item 1",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "",
                            Quantity = 1m,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000052"),
                            Amount = 1000m,
                            Description = "Item 2",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "",
                            Quantity = 2m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000053"),
                            Amount = 1500m,
                            Description = "Item 3",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "",
                            Quantity = 3m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000054"),
                            Amount = 2000m,
                            Description = "Item 4",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "",
                            Quantity = 4m,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000055"),
                            Amount = 2500m,
                            Description = "Item 5",
                            InvoiceId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Name = "",
                            Quantity = 5m,
                            UnitPrice = 500m
                        });
                });

            modelBuilder.Entity("CqrsDemo.Core.Models.InvoiceItem", b =>
                {
                    b.HasOne("CqrsDemo.Core.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("CqrsDemo.Core.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
